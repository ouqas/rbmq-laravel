version: "3.7"
services:

    # PHP Service
  php:
        container_name: php
        # for macs m1 and above
        platform: linux/x86_64
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        command: ["docker-compose/entrydev.sh"]
      
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8000:8000
        depends_on:
            - db
        networks:
          - loc
        healthcheck:
          test: curl --fail http://localhost:8000 || exit 1
          interval: 2s
          retries: 10
          start_period: 10s
          timeout: 10s

  db:
    image: mysql:debian
    platform: linux/x86_64
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      # SERVICE_TAGS: dev
      # SERVICE_NAME: mysql
    volumes:
      - db-data:/var/lib/mysql
    ports:
        - "9906:3306"
    networks:
      - loc
    healthcheck:
      #test: curl --fail http://localhost:3306 || exit 1
      test: mysql ${DB_DATABASE} --user=${DB_USERNAME} --password='${DB_PASSWORD}' --silent --execute "SELECT 1;"
      #test: "mysql -uroot -p$$MYSQL_ROOT_PASSWORD  -e 'SELECT * FROM factor_header' $${DB_DATABASE} "
      # test: ["CMD", "mysqladmin", "-u$MYSQL_USER", "-p$MYSQL_PASSWORD",  "ping", "-h", "localhost"]
      interval: 2s
      retries: 2
      start_period: 10s
      timeout: 10s
  rabitmq: 
      image: rabbitmq:3.6-management-alpine
      container_name: rabbitmq
      ports: 
       - "5672:5672"
       - "15672:15672"
      restart: unless-stopped
      environment: 
      #  AMQP_URL: ""
       RABBITMQ_DEFAULT_USER: ${RB_USER}
       RABBITMQ_DEFAULT_PASS: ${RB_PSSWRD}
      volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  
# COPY ./docker/default.conf /etc/nginx/conf.d/default.conf
volumes:
    db-data: ~
networks:
  loc:
    driver: bridge

