version: "3.7"
services:

    # PHP Service
  nginx-fpm:
        container_name: nginx-fpm_container
        # for macs m1 and above
        platform: linux/x86_64
        build:
            context: .
            # target: nginx-fpm
            args:
                - APP_ENV=${APP_ENV}
        command: ["docker-compose/entrydev.sh"]
      
        environment:
            - APP_ENV=${APP_ENV}
           
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8000:8000
            - 8001:8001
            - 5173:5173
        depends_on:
            - database_container
        networks:
          - loc
        # healthcheck:
        #   test: curl --fail http://localhost:8000 || exit 1
        #   interval: 2s
        #   retries: 10
        #   start_period: 10s
        #   timeout: 10s

  database_container:
    image: mysql:debian
    platform: linux/x86_64
    container_name: database_container
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: rbmq-laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: false
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      # SERVICE_TAGS: dev
      # SERVICE_NAME: mysql
    volumes:
      - db-data:/var/lib/mysql
    ports:
        - "9906:3306"
    networks:
      - loc
    # healthcheck:
    #   #test: curl --fail http://localhost:3306 || exit 1
    #   test: mysql ${DB_DATABASE} --user=${DB_USERNAME} --password='${DB_PASSWORD}' --silent --execute "SELECT 1;"
    #   #test: "mysql -uroot -p$$MYSQL_ROOT_PASSWORD  -e 'SELECT * FROM factor_header' $${DB_DATABASE} "
    #   # test: ["CMD", "mysqladmin", "-u$MYSQL_USER", "-p$MYSQL_PASSWORD",  "ping", "-h", "localhost"]
    #   interval: 2s
    #   retries: 2
    #   start_period: 10s
    #   timeout: 10s
  rabbitmq: 
      image: rabbitmq:3.6-management-alpine
      container_name: rabbitmq_container
      ports: 
       - "5672:5672"
       - "15672:15672"
      restart: unless-stopped
      environment: 
      #  AMQP_URL: ""
       RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
       RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      volumes:
        - ~/.docker-conf/c/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
      networks:
      - loc

  
# COPY ./docker/default.conf /etc/nginx/conf.d/default.conf
volumes:
    db-data: ~
networks:
  loc:
    driver: bridge

